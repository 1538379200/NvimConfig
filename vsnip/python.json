{
    "main": {
        "prefix": ["main"], 
        "body": [
            "if __name__ == \"__main__\": \n\t..."
        ], 
        "description": "run main"
    },
    "pytestrun": {
        "prefix": ["pytestrun", "ptr", "pytr"], 
        "body": [
            "import pytest",
            "import os\n\n", 
            "if __name__ == \"__main__\":",
            "\tpytest.main(${1})", 
            "\tos.system(\"allure generate ./result${2} -o ./allure-report${0} --clean\")"
        ]
    },
    "class": {
        "prefix": ["clsc", "class"], 
        "body": [
            "class ${1}:", 
            "\tdef __init__(self${2}):", 
            "\t...${0}"
        ]
    },
    "allure": {
        "prefix": ["@allure"], 
        "body": [
            "@allure.epic(${1})", 
            "@allure.feature(${2})", 
            "@allure.story(${0})"
        ]
    },
    "allurecls": {
        "prefix": ["allurecls"],
        "body": [
            "@allure.epic(${1})", 
            "@allure.feature(${2})", 
            "@allure.story(${3})",
            "class ${0}:" 
        ] 
    },
    "with open": {
        "prefix": ["with open"], 
        "body": [
            "with open(${1}, \"${2}\", encoding=\"utf8\") as f:", 
            "\t${0}"
        ]
    }
}